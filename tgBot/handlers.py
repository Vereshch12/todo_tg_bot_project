from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram_dialog import DialogManager, StartMode
from api import link_telegram_id, get_tasks
from dialogs import task_dialog, TaskDialog

router = Router()

@router.message(Command("start"))
async def start_command(message: Message):
    telegram_id = message.from_user.id
    success = await link_telegram_id(telegram_id)
    if success:
        await message.answer("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!")
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(Command("add_task"))
async def add_task_command(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(TaskDialog.TITLE, mode=StartMode.RESET_STACK)

@router.message(Command("show_tasks"))
async def show_tasks_command(message: Message):
    telegram_id = message.from_user.id
    tasks = await get_tasks(telegram_id)
    if not tasks:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞—á. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å –ø–æ–º–æ—â—å—é /add_task!")
        return

    task_list = ["üìã <b>–í–∞—à–∏ –∑–∞–¥–∞—á–∏:</b>\n"]
    for idx, task in enumerate(tasks, 1):
        status = "–í—ã–ø–æ–ª–Ω–µ–Ω–∞" if task["completed"] else "–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        categories = ", ".join(task["categories"]) if task["categories"] else "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"
        task_text = (
            f"<b>{idx}) {task['title']}</b>\n"
            f"  –û–ø–∏—Å–∞–Ω–∏–µ: {task['description']}\n"
            f"  –°–æ–∑–¥–∞–Ω–æ: {task['created_at']}\n"
            f"  –î–µ–¥–ª–∞–π–Ω: {task['due_date']}\n"
            f"  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories}\n"
            f"  –°—Ç–∞—Ç—É—Å: {status}\n\n"
        )
        task_list.append(task_text)

    await message.answer("\n".join(task_list), parse_mode="HTML")

def setup_handlers(dp):
    dp.include_router(router)
    dp.include_router(task_dialog)