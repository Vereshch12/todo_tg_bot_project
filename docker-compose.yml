services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=12072003
      - POSTGRES_INITDB_ARGS=--auth-host=trust
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build: .
    command: >
      sh -c "wait-for-it.sh db:5432 -- python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SECRET_KEY=1ucu_@guk+i@&@=tt5))8=bfz!i^nn3@_35maks%eqfdy)k-*=
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=12072003
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0

  celery:
    build: .
    command: celery -A backend.config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.config.settings

  celery-beat:
    build: .
    command: celery -A backend.config beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.config.settings

  bot:
    build: .
    command: python /app/bot.py
    volumes:
      - .:/app
    depends_on:
      - backend
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - API_BASE_URL=${API_BASE_URL}

volumes:
  postgres_data: