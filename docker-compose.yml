services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=trust
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build: .
    command: >
      sh -c "wait-for-it.sh db:5432 -- python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_URL=${REDIS_URL}

  celery:
    build: .
    command: celery -A backend.config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis
    environment:
      - REDIS_URL=${REDIS_URL}
      - DJANGO_SETTINGS_MODULE=backend.config.settings

  celery-beat:
    build: .
    command: celery -A backend.config beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - backend
      - redis
    environment:
      - REDIS_URL=${REDIS_URL}
      - DJANGO_SETTINGS_MODULE=backend.config.settings

  bot:
    build: .
    command: sh -c "wait-for-it.sh backend:8000 -- python /app/tgBot/bot.py"
    volumes:
      - .:/app
    depends_on:
      - backend
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - API_BASE_URL=${API_BASE_URL}
    restart: on-failure

volumes:
  postgres_data: